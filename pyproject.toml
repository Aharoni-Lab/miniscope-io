[tool.poetry]
name = "miniscope_io"
version = "0.1.6"
description = ""
authors = [
    "sneakers-the-rat <JLSaunders987@gmail.com>",
    "t-sasatani <sasatani.dev@gmail.com>",
]
readme = "README.md"
packages = [{include = "miniscope_io"}]

[tool.poetry.dependencies]
python = "^3.9"
opencv-python = "^4.7.0.72"
numpy = "^1.25.0"
ipywidgets = "^8.0.6"
jupyter = "^1.0.0"
matplotlib = "^3.7.1"
pandas = "^2.1.0"
pydantic = "^2.3.0"
coloredlogs = "^15.0.1"
pyserial = "^3.5"
tqdm = "^4.66.1"
bitstring = "^4.1.2"
pydantic-settings = "^2.0.3"
rich = "^13.6.0"


[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
black = "^24.1.1"
ruff = "^0.2.0"

[tool.poetry.group.tests]
optional = true

[tool.poetry.group.tests.dependencies]
pytest = "^7.4.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^6.2.1"
furo = ">=2023.5.20,<2023.07.26"
myst-parser = "^2.0.0"
autodoc-pydantic = "^2.0.1"

[tool.poetry.extras]
tests = ["pytest"]
docs = ["sphinx", "furo", "myst-parser"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
streamDaq = "miniscope_io.stream_daq:main"
updateDevice = "miniscope_io.device_update:updateDevice"


[tool.ruff]
target-version = "py311"
include = ["miniscope_io/**/*.py", "pyproject.toml"]
exclude = ["tests", "miniscope_io/vendor"]

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # annotations
    "ANN",
    ## ----------
    # pydocstyle
    # undocumented public objects
    "D100", "D101", "D102", "D103", "D104", "D106", "D107",
    # indentation
    "D207", "D208",
    # whitespace
    "D210", "D211",
    # emptiness
    "D419",


]
ignore = [
    "ANN101", "ANN102", "ANN401", "ANN204",
    # explicit strict arg for zip
    "B905",
    # builtin type annotations
    "UP006", "UP035",
    # | for Union types (only supported >=3.10
    "UP007", "UP038",
    # docstrings for __init__
    "D107",
]

fixable = ["ALL"]

[tool.mypy]
plugins = [
    "pydantic.mypy"
]

[tool.black]
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = "miniscope_io/.*\\.py$"
extend-exclude = 'miniscope_io/vendor/.*'