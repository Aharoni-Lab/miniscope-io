[project]
name = "miniscope_io"
description = "Generic I/O for miniscopes"
authors = [
    {name = "sneakers-the-rat", email = "sneakers-the-rat@protonmail.com"},
    {name = "t-sasatani", email = "sasatani.dev@gmail.com"},
]
license = {text = "AGPL-3.0"}
dynamic = ["version"]

requires-python = "<4.0,>=3.9"
dependencies = [
    "opencv-python>=4.7.0.72",
    "numpy>=1.25.0",
    "pandas>=2.1.0",
    "pydantic>=2.3.0",
    "pyserial>=3.5",
    "tqdm>=4.66.1",
    "bitstring>=4.2.3",
    "pydantic-settings>=2.0.3",
    "rich>=13.6.0",
    "pyyaml>=6.0.1",
    "click>=8.1.7",
    "platformdirs>=4.3.6",
    'typing-extensions>=4.10.0; python_version<"3.13"',
]

readme = "README.md"
keywords = [
    "miniscope",
    "neuroscience",
    "io",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Video",
    "Topic :: Multimedia :: Video :: Capture",
    "Topic :: Scientific/Engineering",
]

[project.urls]
homepage = "https://miniscope-io.readthedocs.io/"
repository = "https://github.com/Aharoni-Lab/miniscope-io"
documentation = "https://miniscope-io.readthedocs.io/"

[project.optional-dependencies]
plot = ["matplotlib>=3.9.2"]
tests = [
    "pytest>=8.2.2",
    "pytest-cov>=5.0.0",
    "pytest-timeout>=2.3.1",
    "miniscope_io[plot]",
    "tomli-w>=1.1.0",
]
docs = [
    "sphinx>=6.2.1",
    "sphinx-click>=6.0.0",
    "furo>2023.07.26",
    "myst-parser>3.0.0",
    "autodoc-pydantic>=2.0.1",
    "sphinxcontrib-programoutput>=0.17",
    "sphinx-design>=0.6.1",
]
dev = [
    "black>=24.1.1",
    "ruff>=0.2.0",
    "pre-commit>=3.7.1",
]
all = [
    "miniscope_io[tests,docs,dev]"
]

[project.scripts]
mio = "miniscope_io.cli.main:cli"

[tool.pdm.scripts]
test = "pytest"
lint.composite = [
    "ruff check",
    "black miniscope_io --diff"
]
format.composite = [
    "ruff check --fix",
    "black miniscope_io"
]

[tool.pdm.build]
includes = ["miniscope_io"]

[tool.pdm.version]
source = "scm"
tag_filter = "v*"
tag_regex = 'v(?P<version>([1-9][0-9]*!)?(0|[1-9][0-9]*)(\.(0|[1-9][0-9]*))*((a|b|c|rc)(0|[1-9][0-9]*))?(\.post(0|[1-9][0-9]*))?(\.dev(0|[1-9][0-9]*))?$)$'

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pytest.ini_options]
addopts = [
    "--cov=miniscope_io",
    "--cov-append",
]
filterwarnings = [
    'ignore:builtin type SwigPyPacked',
    'ignore:builtin type SwigPyObject',
]
testpaths = [
    "tests"
]
timeout = 60

[tool.coverage.run]
omit = [
    "miniscope_io/vendor/*",
    "miniscope_io/devices/opalkelly.py", # can't test hardware interface directly
]

[tool.ruff]
target-version = "py39"
include = ["miniscope_io/**/*.py", "pyproject.toml"]
exclude = ["docs", "tests", "miniscope_io/vendor", "noxfile.py"]
line-length = 100

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # annotations
    "ANN",
    # no debugger
    "T10",
    ## ----------
    # pydocstyle
    # undocumented public objects
    "D100", "D101", "D102", "D103", "D104", "D106", "D107",
    # indentation
    "D207", "D208",
    # whitespace
    "D210", "D211",
    # emptiness
    "D419",
    # snake case function name
    "N802"
]
ignore = [
    "ANN101", "ANN102", "ANN401", "ANN204",
    # explicit strict arg for zip
    "B905",
    # builtin type annotations
    "UP006", "UP035",
    # | for Union types (only supported >=3.10
    "UP007", "UP038",
    # docstrings for __init__
    "D107",
]

fixable = ["ALL"]

[tool.mypy]
plugins = [
    "pydantic.mypy"
]
packages = [
    "miniscope_io"
]
exclude = [
    '.*vendor.*'
]
follow_imports = "silent"
warn_unreachable = true

[tool.black]
target-version = ['py38', 'py39', 'py310', 'py311']
include = "miniscope_io/.*\\.py$"
extend-exclude = 'miniscope_io/vendor/.*'
line-length = 100
